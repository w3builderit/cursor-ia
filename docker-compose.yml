version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: usermanager-postgres
    environment:
      POSTGRES_DB: usermanager
      POSTGRES_USER: usermanager
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - usermanager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U usermanager -d usermanager"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    container_name: usermanager-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HOSTNAME_STRICT: false
      KC_LOG_LEVEL: INFO
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - usermanager-network
    restart: unless-stopped
    command: start-dev
    volumes:
      - keycloak_data:/opt/keycloak/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # User Manager Application
  user-manager-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: usermanager-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: usermanager
      DB_USERNAME: usermanager
      DB_PASSWORD: password
      KEYCLOAK_AUTH_SERVER_URL: http://keycloak:8080
      KEYCLOAK_ISSUER_URI: http://localhost:8080/realms/usermanager
      KEYCLOAK_JWK_SET_URI: http://keycloak:8080/realms/usermanager/protocol/openid-connect/certs
      KEYCLOAK_REALM: usermanager
      KEYCLOAK_CLIENT_ID: user-manager-client
      KEYCLOAK_CLIENT_SECRET: your-client-secret
      SERVER_PORT: 8081
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:4200
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - usermanager-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/api/v1/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Adminer (Database Admin Tool)
  adminer:
    image: adminer:latest
    container_name: usermanager-adminer
    ports:
      - "8082:8080"
    depends_on:
      - postgres
    networks:
      - usermanager-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  keycloak_data:
    driver: local

networks:
  usermanager-network:
    driver: bridge